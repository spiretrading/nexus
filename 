[1mdiff --git a/Applications/Spire/Include/Spire/Ui/EditableTableView.hpp b/Applications/Spire/Include/Spire/Ui/EditableTableView.hpp[m
[1mindex ab2c67dff..017935ea7 100644[m
[1m--- a/Applications/Spire/Include/Spire/Ui/EditableTableView.hpp[m
[1m+++ b/Applications/Spire/Include/Spire/Ui/EditableTableView.hpp[m
[36m@@ -43,8 +43,8 @@[m [mnamespace Spire {[m
       QWidget* make_table_item(const EditableViewBuilder& view_builder,[m
         const std::shared_ptr<TableModel>& table, int row, int column);[m
       void delete_row(const TableRowIndexTracker& row);[m
[31m-      void navigate_next();[m
[31m-      void navigate_previous();[m
[32m+[m[32m      bool navigate_next();[m
[32m+[m[32m      bool navigate_previous();[m
       void set_focus(Index index);[m
       void on_current(const boost::optional<Index>& index);[m
   };[m
[1mdiff --git a/Applications/Spire/Source/Ui/EditableTableView.cpp b/Applications/Spire/Source/Ui/EditableTableView.cpp[m
[1mindex 6e34d47c2..d7308f925 100644[m
[1m--- a/Applications/Spire/Source/Ui/EditableTableView.cpp[m
[1m+++ b/Applications/Spire/Source/Ui/EditableTableView.cpp[m
[36m@@ -269,13 +269,30 @@[m [mEditableTableView::EditableTableView([m
 bool EditableTableView::focusNextPrevChild(bool next) {[m
   if(isEnabled()) {[m
     if(next) {[m
[31m-      navigate_next();[m
[32m+[m[32m      if(navigate_next()) {[m
[32m+[m[32m        return true;[m
[32m+[m[32m      }[m
     } else {[m
[31m-      navigate_previous();[m
[32m+[m[32m      if(navigate_previous()) {[m
[32m+[m[32m        return true;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  auto focus_widget = QApplication::focusWidget();[m
[32m+[m[32m  auto next_focus_widget = focus_widget;[m
[32m+[m[32m  auto next_widget = focus_widget->nextInFocusChain();[m
[32m+[m[32m  while(next_widget && next_widget != focus_widget) {[m
[32m+[m[32m    next_widget = next_widget->nextInFocusChain();[m
[32m+[m[32m    if(!isAncestorOf(next_widget) && next_widget->isEnabled() &&[m
[32m+[m[32m        next_widget->focusPolicy() & Qt::TabFocus) {[m
[32m+[m[32m      next_focus_widget = next_widget;[m
[32m+[m[32m      if(next) {[m
[32m+[m[32m        break;[m
[32m+[m[32m      }[m
     }[m
[31m-    return true;[m
   }[m
[31m-  return TableView::focusNextPrevChild(next);[m
[32m+[m[32m  next_focus_widget->setFocus();[m
[32m+[m[32m  return true;[m
 }[m
 [m
 QWidget* EditableTableView::make_table_item([m
[36m@@ -315,13 +332,13 @@[m [mvoid EditableTableView::delete_row(const TableRowIndexTracker& row) {[m
   get_table()->remove(row.get_index());[m
 }[m
 [m
[31m-void EditableTableView::navigate_next() {[m
[32m+[m[32mbool EditableTableView::navigate_next() {[m
   if(auto& current = get_current()->get()) {[m
     auto column = current->m_column + 1;[m
     if(column >= get_table()->get_column_size() - 1) {[m
       auto row = current->m_row + 1;[m
       if(row >= get_table()->get_row_size()) {[m
[31m-        get_current()->set(none);[m
[32m+[m[32m        return false;[m
       } else {[m
         get_current()->set(Index(row, 0));[m
       }[m
[36m@@ -334,15 +351,16 @@[m [mvoid EditableTableView::navigate_next() {[m
   if(auto& current = get_current()->get()) {[m
     set_focus(*current);[m
   }[m
[32m+[m[32m  return true;[m
 }[m
 [m
[31m-void EditableTableView::navigate_previous() {[m
[32m+[m[32mbool EditableTableView::navigate_previous() {[m
   if(auto& current = get_current()->get()) {[m
     auto column = current->m_column - 1;[m
     if(column < 0) {[m
       auto row = current->m_row - 1;[m
       if(row < 0) {[m
[31m-        get_current()->set(none);[m
[32m+[m[32m        return false;[m
       } else {[m
         get_current()->set(Index(row, get_table()->get_column_size() - 1));[m
       }[m
[36m@@ -357,6 +375,7 @@[m [mvoid EditableTableView::navigate_previous() {[m
   if(auto& current = get_current()->get()) {[m
     set_focus(*current);[m
   }[m
[32m+[m[32m  return true;[m
 }[m
 [m
 void EditableTableView::set_focus(Index index) {[m
